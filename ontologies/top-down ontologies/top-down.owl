Prefix(:=<http://www.glamurs.eu/ontologies/2016/TBOX/top-down#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(integration:=<http://www.glamurs.eu/ontologies/2016/TBOX/top-down/integration#>)
Prefix(expert:=<http://www.glamurs.eu/ontologies/2016/TBOX/top-down/expert#>)
Prefix(glamurs:=<http://www.glamurs.eu/ontologies/glamurs-WS20140131.owl#>)
Prefix(core:=<http://www.glamurs.eu/ontologies/2016/TBOX/top-down/core#>)
Prefix(mirror:=<http://www.glamurs.eu/ontologies/2016/KB/mirror#>)
Prefix(questionnaire:=<http://www.glamurs.eu/ontologies/2016/TBOX/top-down/questionnaire#>)
Prefix(metadata:=<http://www.glamurs.eu/ontologies/2016/TBOX/top-down/metadata#>)
Prefix(mirror-core:=<http://www.glamurs.eu/ontologies/2016/KB/top-down/mirror-core#>)
Prefix(mirror-expert:=<http://www.glamurs.eu/ontologies/2016/KB/top-down/mirror-expert#>)
Prefix(mirror-questionnaire:=<http://www.glamurs.eu/ontologies/2016/KB/top-down/mirror-questionnaire#>)


Ontology(<http://www.glamurs.eu/ontologies/2016/TBOX/top-down>
Import(<http://www.glamurs.eu/ontologies/2016/KB/top-down/mirror-expert>)
Import(<http://www.glamurs.eu/ontologies/2016/KB/top-down/mirror-core>)
Import(<http://www.glamurs.eu/ontologies/2016/KB/top-down/mirror-questionnaire>)
Import(<http://www.glamurs.eu/ontologies/2016/TBOX/top-down/integration>)

Annotation(rdfs:comment "Note the conventions for this ontology are:

The underlying name of an entity, i.e. a class, object, datatype or property name is in Camel Case and should indicate the purpose of the entity. This is opposed to some ontologies which randomly name the entity and purely use the label to identify the entity in some meaningful way.
 
+ classes begin with an upper case letter
+ object properties begin with a lower case letter
+ data properties begin with a lower case letter and are suffixed with -value unless the data value is boolean.
+ data properties and object properties being with has unless another verb makes better sense.
+ individuals generally begin with a lowercase letter, unless it is a proper name

Note these conventions relate to the underlying entity and not what is shown as its name in ProtÃ©gÃ© (which is normally the value of the label for whatever default the language is set to).

+ a label must be provided (usually with a language specification) and should be make sense in the language of choice

Markdown will be used in all text."@en)
Annotation(rdfs:comment "This takes the original ontology from the description of work and combines with several other top down ontologies. In particular:

+ The expert terms ontology.
+ The on-line questionnaire ontology"@en)
Annotation(rdfs:isDefinedBy :author:DougSalt)
Annotation(owl:versionInfo "1.0"^^xsd:decimal)

Declaration(NamedIndividual(:author:DougSalt))
Declaration(NamedIndividual(integration:author:DougSalt))
Declaration(AnnotationProperty(questionnaire:environmentalOrSustainabilityConcern))

############################
#   Annotation Properties
############################

# Annotation Property: questionnaire:environmentalOrSustainabilityConcern (environmental concern or sustainability concern)

AnnotationPropertyDomain(Annotation(rdfs:isDefinedBy metadata:author:dougSalt) questionnaire:environmentalOrSustainabilityConcern questionnaire:Person)


############################
#   Classes
############################

# Class: core:Actor (core:Actor)

EquivalentClasses(core:Actor expert:Actor)
EquivalentClasses(core:Actor questionnaire:Actor)
SubClassOf(core:Actor ObjectSomeValuesFrom(integration:uses questionnaire:Interaction))

# Class: core:EconomicSustainability (core:EconomicSustainability)

SubClassOf(core:EconomicSustainability ObjectSomeValuesFrom(metadata:isPropertyOf questionnaire:Economy))

# Class: core:EnergyUseInHomes (core:EnergyUseInHomes)

SubClassOf(core:EnergyUseInHomes expert:EnergyUse)

# Class: core:EnvironmentalSustainability (core:EnvironmentalSustainability)

SubClassOf(core:EnvironmentalSustainability ObjectSomeValuesFrom(metadata:isPropertyOf expert:Environment))

# Class: core:Food (core:Food)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) core:Food ObjectSomeValuesFrom(integration:isUsedBy questionnaire:Person))

# Class: core:IndividualSustainability (core:IndividualSustainability)

SubClassOf(core:IndividualSustainability ObjectSomeValuesFrom(metadata:isPropertyOf questionnaire:Person))

# Class: core:Knowledge (core:Knowledge)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) core:Knowledge ObjectSomeValuesFrom(integration:isModifedBy expert:KnowledgeAcquisition))

# Class: core:LifestyleDomain (core:LifestyleDomain)

SubClassOf(core:LifestyleDomain ObjectSomeValuesFrom(integration:isUsedBy questionnaire:Actor))

# Class: core:Nation (core:Nation)

SubClassOf(core:Nation expert:Place)

# Class: core:Policymaker (core:Policymaker)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) core:Policymaker questionnaire:Person)

# Class: core:Project (core:Project)

SubClassOf(Annotation(rdfs:isDefinedBy metadata:author:dougSalt) core:Project ObjectSomeValuesFrom(integration:uses core:Researcher))

# Class: core:Region (core:Region)

EquivalentClasses(core:Region expert:Region)
SubClassOf(core:Region expert:Place)

# Class: core:Researcher (core:Researcher)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) core:Researcher questionnaire:Person)

# Class: core:Thinking (core:Thinking)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) core:Thinking metadata:Process)
SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) core:Thinking ObjectUnionOf(ObjectSomeValuesFrom(integration:isModifedBy expert:KnowledgeAcquisition) ObjectSomeValuesFrom(integration:isModifedBy questionnaire:Experience) ObjectSomeValuesFrom(integration:isModifedBy questionnaire:Theory)))

# Class: core:Transformation (core:Transformation)

EquivalentClasses(Annotation(rdfs:isDefinedBy integration:author:DougSalt) core:Transformation questionnaire:Transition)

# Class: core:Transport (core:Transport)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) core:Transport ObjectSomeValuesFrom(integration:isUsedBy expert:Travel))

# Class: :Satisfaction (:Satisfaction)

AnnotationAssertion(rdfs:isDefinedBy :Satisfaction :author:DougSalt)
SubClassOf(:Satisfaction metadata:SuggestedClass)

# Class: expert:Actor (Actor)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) expert:Actor ObjectSomeValuesFrom(integration:partOf core:Project))

# Class: expert:BehaviourChange (Behaviour change)

SubClassOf(expert:BehaviourChange ObjectSomeValuesFrom(integration:partOf expert:LifestyleChange))

# Class: expert:CapabilityApproach (Capability approach)

SubClassOf(Annotation(rdfs:isDefinedBy metadata:author:dougSalt) expert:CapabilityApproach questionnaire:Theory)

# Class: expert:Country (Country)

SubClassOf(expert:Country questionnaire:Agent)

# Class: expert:CriticalAnalysis (Critical analysis)

SubClassOf(Annotation(rdfs:isDefinedBy metadata:author:dougSalt) expert:CriticalAnalysis core:Thinking)

# Class: expert:Decision (Decision)

EquivalentClasses(expert:Decision questionnaire:DecisionMaking)
SubClassOf(Annotation(rdfs:isDefinedBy metadata:author:dougSalt) expert:Decision ObjectSomeValuesFrom(integration:wasCreatedBy questionnaire:Individual))

# Class: expert:EconomicOutput (Economic output)

SubClassOf(expert:EconomicOutput ObjectSomeValuesFrom(integration:requires questionnaire:Economy))

# Class: expert:Economy (Economy)

SubClassOf(expert:Economy ObjectSomeValuesFrom(integration:uses expert:EconomicSystem))

# Class: expert:Energy (Energy)

SubClassOf(expert:Energy ObjectSomeValuesFrom(integration:isUsedBy questionnaire:Actor))

# Class: expert:Environment (Environment)

SubClassOf(expert:Environment ObjectSomeValuesFrom(integration:hasPart questionnaire:Ecosystem))
SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) expert:Environment ObjectSomeValuesFrom(integration:isModifedBy expert:EnvironmentalImpact))

# Class: expert:Experience (expert:Experience)

EquivalentClasses(expert:Experience questionnaire:Experience)
SubClassOf(expert:Experience ObjectSomeValuesFrom(integration:creates core:Knowledge))

# Class: expert:FocusGroup (Focus group)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) expert:FocusGroup questionnaire:Collective)

# Class: expert:Government (Government)

SubClassOf(Annotation(rdfs:isDefinedBy metadata:author:dougSalt) expert:Government expert:Actor)
SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) expert:Government ObjectSomeValuesFrom(integration:hasPart questionnaire:Governance))
SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) expert:Government ObjectSomeValuesFrom(integration:partOf expert:Country))

# Class: expert:GreenGrowth (Green growth)

SubClassOf(expert:GreenGrowth ObjectSomeValuesFrom(integration:partOf expert:EconomicSystem))

# Class: expert:Interaction (Interaction)

SubClassOf(expert:Interaction ObjectSomeValuesFrom(integration:creates questionnaire:Experience))

# Class: expert:KnowledgeAcquisition (expert:KnowledgeAcquisition)

SubClassOf(expert:KnowledgeAcquisition ObjectSomeValuesFrom(integration:modifies core:Knowledge))

# Class: expert:LifeSatisfaction (Life satisfaction)

SubClassOf(expert:LifeSatisfaction :Satisfaction)

# Class: expert:LifestyleChange (Lifestyle change)

SubClassOf(expert:LifestyleChange ObjectSomeValuesFrom(integration:modifies core:LifestyleDomain))

# Class: expert:Mood (Mood)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) expert:Mood ObjectSomeValuesFrom(integration:isModifedBy core:WorkLifeBalance))

# Class: expert:NetworkAnalysis (Network analysis)

SubClassOf(expert:NetworkAnalysis ObjectSomeValuesFrom(integration:isUsedBy questionnaire:Theory))

# Class: expert:Place (Place)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) expert:Place core:Geography)

# Class: expert:PostiveFeedback (Positive feedback)

SubClassOf(expert:PostiveFeedback questionnaire:Feedback)

# Class: expert:Product (Product)

SubClassOf(expert:Product ObjectSomeValuesFrom(integration:uses expert:SupplyChain))

# Class: expert:PublicGood (Public good)

SubClassOf(expert:PublicGood ObjectSomeValuesFrom(integration:isModifedBy metadata:Policy))

# Class: expert:ReboundEffect (Rebound effect)

EquivalentClasses(expert:ReboundEffect questionnaire:ReboundEffect)

# Class: expert:SelfReflection (expert:SelfReflection)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) expert:SelfReflection core:Thinking)

# Class: expert:SocialIdentityTheory (Social identity theory)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) expert:SocialIdentityTheory questionnaire:Theory)

# Class: expert:SocialNetwork (Social network)

SubClassOf(expert:SocialNetwork expert:SocialNetwork)
SubClassOf(expert:SocialNetwork questionnaire:Network)
SubClassOf(expert:SocialNetwork ObjectSomeValuesFrom(metadata:hasProperty core:SocialSustainability))

# Class: expert:Society (Society)

SubClassOf(expert:Society ObjectSomeValuesFrom(integration:modifies core:SocialSustainability))

# Class: expert:Space (Space)

SubClassOf(Annotation(rdfs:isDefinedBy metadata:author:dougSalt) expert:Space core:Geography)

# Class: expert:Stakeholder (Stakeholder)

SubClassOf(expert:Stakeholder core:Actor)

# Class: expert:TravelBehaviour (Travel behaviour)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) expert:TravelBehaviour questionnaire:Behaviour)

# Class: questionnaire:Behaviour (Behaviour)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) questionnaire:Behaviour ObjectSomeValuesFrom(integration:isModifedBy core:Knowledge))
SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) questionnaire:Behaviour ObjectSomeValuesFrom(integration:isModifedBy core:Thinking))
SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) questionnaire:Behaviour ObjectSomeValuesFrom(integration:isModifedBy expert:BehaviourChange))

# Class: questionnaire:BehaviouralPotential (Behavioural potential)

SubClassOf(questionnaire:BehaviouralPotential ObjectSomeValuesFrom(integration:isModifedBy questionnaire:Learning))

# Class: questionnaire:CollectiveThinking (Collective thinking)

SubClassOf(Annotation(rdfs:isDefinedBy metadata:author:dougSalt) questionnaire:CollectiveThinking core:Thinking)

# Class: questionnaire:Commuter (Commuter)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) questionnaire:Commuter questionnaire:Person)

# Class: questionnaire:Construct (Construct)

SubClassOf(questionnaire:Construct ObjectSomeValuesFrom(integration:partOf questionnaire:Theory))

# Class: questionnaire:CriticalMass (Critical mass)

SubClassOf(Annotation(rdfs:isDefinedBy metadata:author:dougSalt) questionnaire:CriticalMass ObjectSomeValuesFrom(integration:partOf questionnaire:Theory))

# Class: questionnaire:Degrowth (Degrowth)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) questionnaire:Degrowth expert:GreenGrowth)

# Class: questionnaire:Ecosystem (Ecosystem)

SubClassOf(questionnaire:Ecosystem ObjectSomeValuesFrom(integration:modifies expert:Environment))
SubClassOf(questionnaire:Ecosystem ObjectSomeValuesFrom(integration:requires expert:Environment))

# Class: questionnaire:Footprint (Footprint)

SubClassOf(questionnaire:Footprint ObjectSomeValuesFrom(integration:isModifedBy questionnaire:Agent))

# Class: questionnaire:GrassrootsMovement (Grassroots movement)

SubClassOf(Annotation(rdfs:isDefinedBy metadata:author:dougSalt) questionnaire:GrassrootsMovement questionnaire:Collective)

# Class: questionnaire:InformationProcessing (Information processing)

SubClassOf(questionnaire:InformationProcessing ObjectSomeValuesFrom(integration:uses questionnaire:Information))

# Class: questionnaire:Item (Item)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) questionnaire:Item ObjectSomeValuesFrom(integration:partOf questionnaire:Theory))

# Class: questionnaire:Learning (Learning)

SubClassOf(questionnaire:Learning ObjectSomeValuesFrom(integration:isModifedBy questionnaire:Attention))

# Class: questionnaire:Model (Model)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) questionnaire:Model ObjectSomeValuesFrom(integration:isModifedBy questionnaire:ModelAccuracy))

# Class: questionnaire:PathAnalysis (Path analysis)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) questionnaire:PathAnalysis questionnaire:Theory)
SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) questionnaire:PathAnalysis ObjectSomeValuesFrom(integration:hasPart questionnaire:PathCoefficient))

# Class: questionnaire:Person (questionnaire:Person)

SubClassOf(questionnaire:Person ObjectSomeValuesFrom(integration:hasProperty :Satisfaction))

# Class: questionnaire:Policy (questionnaire:Policy)

SubClassOf(questionnaire:Policy ObjectSomeValuesFrom(integration:isModifedBy core:Policymaker))

# Class: questionnaire:SelfPerception (Self perception)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) questionnaire:SelfPerception core:Knowledge)

# Class: questionnaire:SpillOver (Spill-over)

SubClassOf(Annotation(rdfs:isDefinedBy metadata:author:dougSalt) questionnaire:SpillOver questionnaire:Theory)

# Class: questionnaire:Theory (Theory)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) questionnaire:Theory ObjectUnionOf(ObjectSomeValuesFrom(metadata:isPropertyOf core:Transformation) ObjectSomeValuesFrom(integration:isUsedBy core:Researcher)))

# Class: questionnaire:Vision (Vision)

SubClassOf(Annotation(rdfs:isDefinedBy integration:author:DougSalt) questionnaire:Vision core:Thinking)

# Class: metadata:Institution (Institution)

SubClassOf(metadata:Institution expert:Actor)


############################
#   Named Individuals
############################

# Individual: :author:DougSalt (Doug Salt)

AnnotationAssertion(rdfs:label :author:DougSalt "Doug Salt")

# Individual: integration:author:DougSalt (Doug Salt)

AnnotationAssertion(rdfs:label integration:author:DougSalt "Doug Salt")


AnnotationAssertion(rdfs:label core:hasContext "has context"@en)
AnnotationAssertion(rdfs:label core:hasGeography "has geography"@en)
AnnotationAssertion(rdfs:label core:hasKnowledge "has knowledge"@en)
AnnotationAssertion(rdfs:label core:hasLifestyle "has lifestyle"@en)
AnnotationAssertion(rdfs:label core:hasLifestyleDomain "has lifestyle domain"@en)
AnnotationAssertion(rdfs:label core:hasSustainability "has sustainability"@en)
AnnotationAssertion(rdfs:label core:hasThinking "has thinking"@en)
AnnotationAssertion(rdfs:label core:transformation "transformation"@en)
AnnotationAssertion(rdfs:label core:transformationFrom "transformation from"@en)
AnnotationAssertion(rdfs:label core:transformationTo "transformation to"@en)
AnnotationAssertion(rdfs:label core:usesKnowledge "uses knowledge"@en)
AnnotationAssertion(rdfs:comment expert:SelfPerception "??")
)