Prefix(:=<http://www.glamurs.eu/ontologies/2016/TBOX/bottom-up/initiative#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.glamurs.eu/ontologies/2016/TBOX/bottom-up/initiative>
Annotation(rdfs:comment "2016-07-09"^^xsd:date)
Annotation(rdfs:isDefinedBy :author:DougSalt)
Annotation(owl:versionInfo "1.0"^^xsd:decimal)

Declaration(Class(:Adult))
Declaration(Class(:Age))
Declaration(Class(:AgeOfKids))
Declaration(Class(:AimsOfTheIniative))
Declaration(Class(:AspectOfCurrentGovernance))
Declaration(Class(:AspectOfEngagementInInitiative))
Declaration(Class(:AspectOfFutureOrBetterGovernance))
Declaration(Class(:AspectOfGovernance))
Declaration(Class(:AspectOfMembershipOfInitiative))
Declaration(Class(:Attitude))
Declaration(Class(:BadHabits))
Declaration(Class(:BadPracticeInInitiative))
Declaration(Class(:BarriersToMembershipOfInitiative))
Declaration(Class(:BehaviourOrBehaviouralPattern))
Declaration(Class(:BehaviouralDomain))
Declaration(Class(:Belief))
Declaration(Class(:BetterManagerialGovernance))
Declaration(Class(:ChangeInPerceptionsOfGovernance))
Declaration(Class(:Child))
Declaration(Class(:ChildhoodEducation))
Declaration(Class(:ChildhoodExperience))
Declaration(Class(:CognitiveEffort))
Declaration(Class(:Communication))
Declaration(Class(:ConceptsOfSustainability))
Declaration(Class(:ConceptualisationOfGovernance))
Declaration(Class(:ConflictOrCopingBehaviour))
Declaration(Class(:ConflictTrigger))
Declaration(Class(:ConflictingMoralValue))
Declaration(Class(:Consumption))
Declaration(Class(:Copes))
Declaration(Class(:CopingByAction))
Declaration(Class(:CopingByNoConflict))
Declaration(Class(:CopingByThinking))
Declaration(Class(:CreationOfConflictDueToInitiative))
Declaration(Class(:CurrentGovernance))
Declaration(Class(:DisillusionWithGovernace))
Declaration(Class(:Displeasure))
Declaration(Class(:Education))
Declaration(Class(:EducationOrExperience))
Declaration(Class(:EffectOnBehaviourDueToInitiative))
Declaration(Class(:EffectOnCopingWithConflictDueToInitiative))
Declaration(Class(:EffectOnLifestyleDueToInitiative))
Declaration(Class(:EmotionRelatedToAConflictOrDilemmaOrCoping))
Declaration(Class(:EmotionalImpact))
Declaration(Class(:Energy))
Declaration(Class(:ExperienceOfPoliticalConditions))
Declaration(Class(:ExternalHinderingFactor))
Declaration(Class(:ExternalSupport))
Declaration(Class(:ExternalSupportingFactor))
Declaration(Class(:FamilyStatus))
Declaration(Class(:Food))
Declaration(Class(:FutureOrientation))
Declaration(Class(:GoodPracticeInInitiative))
Declaration(Class(:GovernanceOriginatingFromACommunity))
Declaration(Class(:Habit))
Declaration(Class(:HinderingFactor))
Declaration(Class(:HinderingInfrastructure))
Declaration(Class(:Housing))
Declaration(Class(:Idea))
Declaration(Class(:ImpactOnLifestyleDueToInitiative))
Declaration(Class(:IncreaseOfConflictDueToInitiative))
Declaration(Class(:Individual))
Declaration(Class(:InformationAccessibility))
Declaration(Class(:InformationAvailability))
Declaration(Class(:Initiative))
Declaration(Class(:InitiativeRelatedImpactOnWellBeing))
Declaration(Class(:InsufficientMoney))
Declaration(Class(:InsufficientTime))
Declaration(Class(:InternalHinderingFactor))
Declaration(Class(:InternalSupportingFactor))
Declaration(Class(:Kid))
Declaration(Class(:LackOfKnowledge))
Declaration(Class(:LackOfPower))
Declaration(Class(:LackOfSkill))
Declaration(Class(:Laziness))
Declaration(Class(:LifestyleSatisfactionImpact))
Declaration(Class(:Measurement))
Declaration(Class(:Mobility))
Declaration(Class(:MoreEducation))
Declaration(Class(:MoreInformation))
Declaration(Class(:MoreRadicalGovernance))
Declaration(Class(:Motivation))
Declaration(Class(:MotivationToJoinInitiative))
Declaration(Class(:MotivationToStayInvolvedWithIniative))
Declaration(Class(:NegativeChangeOnWellBeing))
Declaration(Class(:NoSupport))
Declaration(Class(:ObstacleToJoiningTheInitiative))
Declaration(Class(:ObstacleToRemainingWithInitiative))
Declaration(Class(:Occupation))
Declaration(Class(:OriginatingFromAnIndividual))
Declaration(Class(:OverlyComplex))
Declaration(Class(:PeriodOfTime))
Declaration(Class(:Person))
Declaration(Class(:PersonalAspect))
Declaration(Class(:PersonalDevelopmentalImpact))
Declaration(Class(:Pleasure))
Declaration(Class(:PoliticalActitivity))
Declaration(Class(:PoliticalEngagement))
Declaration(Class(:PositiveChangeOnWellBeing))
Declaration(Class(:PreviousPoliticalEngagement))
Declaration(Class(:Pride))
Declaration(Class(:ProfessionalKnowledge))
Declaration(Class(:ReferenceToPoliticalBiography))
Declaration(Class(:RelevantEducation))
Declaration(Class(:RelevantExperience))
Declaration(Class(:RelevantTraning))
Declaration(Class(:ResdienceInRelationToWorkPlace))
Declaration(Class(:RoleIninitiative))
Declaration(Class(:SocialAndPersonalBackground))
Declaration(Class(:SocialImpact))
Declaration(Class(:SocialPeerPressure))
Declaration(Class(:SupportingFactor))
Declaration(Class(:SupportingInfrastructure))
Declaration(Class(:SustainableBehaviour))
Declaration(Class(:TimeManagementIssue))
Declaration(Class(:TimeRelatedBehaviour))
Declaration(Class(:TimeScarcity))
Declaration(Class(:TimeStress))
Declaration(Class(:TimeUsedForTheinitiative))
Declaration(Class(:UnavailableLand))
Declaration(Class(:UnitOfTime))
Declaration(Class(:Value))
Declaration(Class(:WellBeing))
Declaration(ObjectProperty(:hasAssociatedBehaviourOrBehaviourPattern))
Declaration(ObjectProperty(:hasAssociatedBehaviouralDomain))
Declaration(ObjectProperty(:hasBarrierOrMotivationToMembership))
Declaration(ObjectProperty(:hasBehaviourDomain))
Declaration(ObjectProperty(:hasConceptsOfSustainability))
Declaration(ObjectProperty(:hasCurrentGovernanceAspect))
Declaration(ObjectProperty(:hasEducationOrExperience))
Declaration(ObjectProperty(:hasEngagementInInitiativeAspect))
Declaration(ObjectProperty(:hasFutureOrCurrentGovernanceAspect))
Declaration(ObjectProperty(:hasHinderingFactor))
Declaration(ObjectProperty(:hasImpactOnLifestyleAspect))
Declaration(ObjectProperty(:hasInitiativeProperty))
Declaration(ObjectProperty(:hasInitiativeRelatedImpactOnWellbeing))
Declaration(ObjectProperty(:hasMembershipAspect))
Declaration(ObjectProperty(:hasNegativeChangeOnWellbeing))
Declaration(ObjectProperty(:hasPersonalAspect))
Declaration(ObjectProperty(:hasPoliticalEngagement))
Declaration(ObjectProperty(:hasPositiveChangeOnWellBeing))
Declaration(ObjectProperty(:hasSocialAndPersonalBackground))
Declaration(ObjectProperty(:hasSupportingFactor))
Declaration(ObjectProperty(:hasTimeRelatedBehaviour))
Declaration(ObjectProperty(:hasUnits))
Declaration(ObjectProperty(:hasWellBeingProperty))
Declaration(ObjectProperty(:isForPeriodOfTime))
Declaration(ObjectProperty(:isMemberOfInitiative))
Declaration(ObjectProperty(:mayHaveFutureGovernanceAspect))
Declaration(NamedIndividual(:author:DougSalt))

############################
#   Object Properties
############################

# Object Property: :hasAssociatedBehaviourOrBehaviourPattern (has associated behaviour or behavioural pattern)

AnnotationAssertion(rdfs:label :hasAssociatedBehaviourOrBehaviourPattern "has associated behaviour or behavioural pattern"^^xsd:string)
SubObjectPropertyOf(:hasAssociatedBehaviourOrBehaviourPattern :hasInitiativeProperty)
ObjectPropertyRange(:hasAssociatedBehaviourOrBehaviourPattern :BehaviourOrBehaviouralPattern)

# Object Property: :hasAssociatedBehaviouralDomain (has associated behavioural impact on well-being)

AnnotationAssertion(rdfs:label :hasAssociatedBehaviouralDomain "has associated behavioural impact on well-being"^^xsd:string)
SubObjectPropertyOf(:hasAssociatedBehaviouralDomain :hasAssociatedBehaviourOrBehaviourPattern)
ObjectPropertyRange(:hasAssociatedBehaviouralDomain :BehaviouralDomain)

# Object Property: :hasBarrierOrMotivationToMembership (has barrier or motivation to membership)

AnnotationAssertion(rdfs:label :hasBarrierOrMotivationToMembership "has barrier or motivation to membership"^^xsd:string)
SubObjectPropertyOf(:hasBarrierOrMotivationToMembership :hasMembershipAspect)
ObjectPropertyRange(:hasBarrierOrMotivationToMembership :BarriersToMembershipOfInitiative)

# Object Property: :hasBehaviourDomain (has behaviour domain)

AnnotationAssertion(rdfs:label :hasBehaviourDomain "has behaviour domain"^^xsd:string)
ObjectPropertyRange(:hasBehaviourDomain :BehaviouralDomain)

# Object Property: :hasConceptsOfSustainability (has concept of sustainability)

AnnotationAssertion(rdfs:label :hasConceptsOfSustainability "has concept of sustainability"^^xsd:string)
SubObjectPropertyOf(:hasConceptsOfSustainability :hasSocialAndPersonalBackground)
ObjectPropertyRange(:hasConceptsOfSustainability :ConceptsOfSustainability)

# Object Property: :hasCurrentGovernanceAspect (has current governance aspect)

AnnotationAssertion(rdfs:label :hasCurrentGovernanceAspect "has current governance aspect"^^xsd:string)
SubObjectPropertyOf(:hasCurrentGovernanceAspect :hasFutureOrCurrentGovernanceAspect)
ObjectPropertyRange(:hasCurrentGovernanceAspect :AspectOfCurrentGovernance)

# Object Property: :hasEducationOrExperience (has education or experience)

AnnotationAssertion(rdfs:label :hasEducationOrExperience "has education or experience"^^xsd:string)
SubObjectPropertyOf(:hasEducationOrExperience :hasSocialAndPersonalBackground)
ObjectPropertyRange(:hasEducationOrExperience :EducationOrExperience)

# Object Property: :hasEngagementInInitiativeAspect (has engagement in initiative aspect)

AnnotationAssertion(rdfs:label :hasEngagementInInitiativeAspect "has engagement in initiative aspect"^^xsd:string)
SubObjectPropertyOf(:hasEngagementInInitiativeAspect :hasMembershipAspect)
ObjectPropertyRange(:hasEngagementInInitiativeAspect :AspectOfEngagementInInitiative)

# Object Property: :hasFutureOrCurrentGovernanceAspect (has future or current governance aspect)

AnnotationAssertion(rdfs:label :hasFutureOrCurrentGovernanceAspect "has future or current governance aspect"^^xsd:string)
SubObjectPropertyOf(:hasFutureOrCurrentGovernanceAspect :hasInitiativeProperty)
ObjectPropertyRange(:hasFutureOrCurrentGovernanceAspect :AspectOfGovernance)

# Object Property: :hasHinderingFactor (has hindering factor)

AnnotationAssertion(rdfs:label :hasHinderingFactor "has hindering factor"^^xsd:string)
SubObjectPropertyOf(:hasHinderingFactor :hasAssociatedBehaviourOrBehaviourPattern)
ObjectPropertyRange(:hasHinderingFactor :HinderingFactor)

# Object Property: :hasImpactOnLifestyleAspect (has impact on lifestyle aspect)

AnnotationAssertion(rdfs:label :hasImpactOnLifestyleAspect "has impact on lifestyle aspect"^^xsd:string)
SubObjectPropertyOf(:hasImpactOnLifestyleAspect :hasMembershipAspect)
ObjectPropertyRange(:hasImpactOnLifestyleAspect :ImpactOnLifestyleDueToInitiative)

# Object Property: :hasInitiativeProperty (has initiative property)

AnnotationAssertion(rdfs:label :hasInitiativeProperty "has initiative property"^^xsd:string)
ObjectPropertyDomain(:hasInitiativeProperty :Initiative)

# Object Property: :hasInitiativeRelatedImpactOnWellbeing (has initiative related impact on well-being)

AnnotationAssertion(rdfs:label :hasInitiativeRelatedImpactOnWellbeing "has initiative related impact on well-being"^^xsd:string)
SubObjectPropertyOf(:hasInitiativeRelatedImpactOnWellbeing :hasWellBeingProperty)
ObjectPropertyRange(:hasInitiativeRelatedImpactOnWellbeing :InitiativeRelatedImpactOnWellBeing)

# Object Property: :hasMembershipAspect (has membership aspect)

AnnotationAssertion(rdfs:label :hasMembershipAspect "has membership aspect"^^xsd:string)
SubObjectPropertyOf(:hasMembershipAspect :hasInitiativeProperty)
ObjectPropertyRange(:hasMembershipAspect :AspectOfMembershipOfInitiative)

# Object Property: :hasNegativeChangeOnWellbeing (has negative change on well-being)

AnnotationAssertion(rdfs:label :hasNegativeChangeOnWellbeing "has negative change on well-being"^^xsd:string)
SubObjectPropertyOf(:hasNegativeChangeOnWellbeing :hasWellBeingProperty)
ObjectPropertyRange(:hasNegativeChangeOnWellbeing :NegativeChangeOnWellBeing)

# Object Property: :hasPersonalAspect (has personal aspect)

AnnotationAssertion(rdfs:label :hasPersonalAspect "has personal aspect"^^xsd:string)
SubObjectPropertyOf(:hasPersonalAspect :hasSocialAndPersonalBackground)

# Object Property: :hasPoliticalEngagement (has political engagement)

AnnotationAssertion(rdfs:label :hasPoliticalEngagement "has political engagement"^^xsd:string)
SubObjectPropertyOf(:hasPoliticalEngagement :hasSocialAndPersonalBackground)
ObjectPropertyRange(:hasPoliticalEngagement :PoliticalEngagement)

# Object Property: :hasPositiveChangeOnWellBeing (has positive change of well-being)

AnnotationAssertion(rdfs:label :hasPositiveChangeOnWellBeing "has positive change of well-being"^^xsd:string)
SubObjectPropertyOf(:hasPositiveChangeOnWellBeing :hasWellBeingProperty)
ObjectPropertyRange(:hasPositiveChangeOnWellBeing :PositiveChangeOnWellBeing)

# Object Property: :hasSocialAndPersonalBackground (has social and personal background)

AnnotationAssertion(rdfs:label :hasSocialAndPersonalBackground "has social and personal background"^^xsd:string)
ObjectPropertyDomain(:hasSocialAndPersonalBackground :Person)
ObjectPropertyRange(:hasSocialAndPersonalBackground :SocialAndPersonalBackground)

# Object Property: :hasSupportingFactor (has supporting factor)

AnnotationAssertion(rdfs:label :hasSupportingFactor "has supporting factor"^^xsd:string)
SubObjectPropertyOf(:hasSupportingFactor :hasAssociatedBehaviourOrBehaviourPattern)
ObjectPropertyRange(:hasSupportingFactor :SupportingFactor)

# Object Property: :hasTimeRelatedBehaviour (has time related behaviour)

AnnotationAssertion(rdfs:label :hasTimeRelatedBehaviour "has time related behaviour"^^xsd:string)
SubObjectPropertyOf(:hasTimeRelatedBehaviour :hasAssociatedBehaviourOrBehaviourPattern)
ObjectPropertyRange(:hasTimeRelatedBehaviour :TimeRelatedBehaviour)

# Object Property: :hasUnits (has units)

AnnotationAssertion(rdfs:label :hasUnits "has units"^^xsd:string)
SubObjectPropertyOf(:hasUnits :isForPeriodOfTime)
ObjectPropertyRange(:hasUnits :Measurement)

# Object Property: :hasWellBeingProperty (has well-being property)

AnnotationAssertion(rdfs:label :hasWellBeingProperty "has well-being property"^^xsd:string)
SubObjectPropertyOf(:hasWellBeingProperty :hasInitiativeProperty)
ObjectPropertyRange(:hasWellBeingProperty :WellBeing)

# Object Property: :isForPeriodOfTime (is for period of time)

AnnotationAssertion(rdfs:label :isForPeriodOfTime "is for period of time"^^xsd:string)
ObjectPropertyRange(:isForPeriodOfTime :PeriodOfTime)

# Object Property: :isMemberOfInitiative (is a member of the initiative)

AnnotationAssertion(rdfs:label :isMemberOfInitiative "is a member of the initiative"^^xsd:string)
ObjectPropertyDomain(:isMemberOfInitiative :Person)
ObjectPropertyRange(:isMemberOfInitiative :Initiative)

# Object Property: :mayHaveFutureGovernanceAspect (may have future governance aspect)

AnnotationAssertion(rdfs:label :mayHaveFutureGovernanceAspect "may have future governance aspect"^^xsd:string)
SubObjectPropertyOf(:mayHaveFutureGovernanceAspect :hasFutureOrCurrentGovernanceAspect)
ObjectPropertyRange(:mayHaveFutureGovernanceAspect :AspectOfFutureOrBetterGovernance)



############################
#   Classes
############################

# Class: :Adult (:Adult)

SubClassOf(:Adult :Person)
DisjointClasses(:Adult :Child)

# Class: :Age (:Age)

SubClassOf(:Age :PersonalAspect)

# Class: :AgeOfKids (Age of kids)

AnnotationAssertion(rdfs:label :AgeOfKids "Age of kids"^^xsd:string)
SubClassOf(:AgeOfKids :PersonalAspect)

# Class: :AimsOfTheIniative (Knowledge of aims of the iniative)

AnnotationAssertion(rdfs:label :AimsOfTheIniative "Knowledge of aims of the iniative"^^xsd:string)
SubClassOf(:AimsOfTheIniative :ConceptsOfSustainability)

# Class: :AspectOfCurrentGovernance (Aspect of current governance)

AnnotationAssertion(rdfs:label :AspectOfCurrentGovernance "Aspect of current governance"^^xsd:string)
SubClassOf(:AspectOfCurrentGovernance :AspectOfGovernance)

# Class: :AspectOfEngagementInInitiative (Engagement in the initiative aspect)

AnnotationAssertion(rdfs:label :AspectOfEngagementInInitiative "Engagement in the initiative aspect"^^xsd:string)
SubClassOf(:AspectOfEngagementInInitiative :AspectOfMembershipOfInitiative)

# Class: :AspectOfFutureOrBetterGovernance (Aspect of future or better governance)

AnnotationAssertion(rdfs:label :AspectOfFutureOrBetterGovernance "Aspect of future or better governance"^^xsd:string)
SubClassOf(:AspectOfFutureOrBetterGovernance :AspectOfGovernance)

# Class: :AspectOfGovernance (Aspect of governance)

AnnotationAssertion(rdfs:label :AspectOfGovernance "Aspect of governance"^^xsd:string)

# Class: :AspectOfMembershipOfInitiative (Aspect of membership of the initiative)

AnnotationAssertion(rdfs:label :AspectOfMembershipOfInitiative "Aspect of membership of the initiative"^^xsd:string)

# Class: :Attitude (:Attitude)

SubClassOf(:Attitude :InternalSupportingFactor)

# Class: :BadHabits (Bad habit)

AnnotationAssertion(rdfs:label :BadHabits "Bad habit"^^xsd:string)
SubClassOf(:BadHabits :ConflictTrigger)

# Class: :BadPracticeInInitiative (Bad practice in the initiative)

AnnotationAssertion(rdfs:label :BadPracticeInInitiative "Bad practice in the initiative"^^xsd:string)
SubClassOf(:BadPracticeInInitiative :AspectOfEngagementInInitiative)

# Class: :BarriersToMembershipOfInitiative (Motivation or barrier to membership of the initiative)

AnnotationAssertion(rdfs:label :BarriersToMembershipOfInitiative "Motivation or barrier to membership of the initiative"^^xsd:string)
SubClassOf(:BarriersToMembershipOfInitiative :AspectOfMembershipOfInitiative)

# Class: :BehaviourOrBehaviouralPattern (Behaviour or behavioural pattern)

AnnotationAssertion(rdfs:label :BehaviourOrBehaviouralPattern "Behaviour or behavioural pattern"^^xsd:string)

# Class: :BehaviouralDomain (Behavioural domain)

AnnotationAssertion(rdfs:label :BehaviouralDomain "Behavioural domain"^^xsd:string)

# Class: :Belief (:Belief)

SubClassOf(:Belief :InternalSupportingFactor)

# Class: :BetterManagerialGovernance (Better managerial governance)

AnnotationAssertion(rdfs:label :BetterManagerialGovernance "Better managerial governance"^^xsd:string)
SubClassOf(:BetterManagerialGovernance :AspectOfFutureOrBetterGovernance)

# Class: :ChangeInPerceptionsOfGovernance (Change in perceptions of governanace)

AnnotationAssertion(rdfs:label :ChangeInPerceptionsOfGovernance "Change in perceptions of governanace"^^xsd:string)
SubClassOf(:ChangeInPerceptionsOfGovernance :AspectOfCurrentGovernance)

# Class: :Child (:Child)

EquivalentClasses(:Child :Kid)
SubClassOf(:Child :Person)

# Class: :ChildhoodEducation (Childhood education)

AnnotationAssertion(rdfs:label :ChildhoodEducation "Childhood education"^^xsd:string)
SubClassOf(:ChildhoodEducation :InternalSupportingFactor)

# Class: :ChildhoodExperience (Childhood experience)

AnnotationAssertion(rdfs:label :ChildhoodExperience "Childhood experience"^^xsd:string)
SubClassOf(:ChildhoodExperience :InternalSupportingFactor)

# Class: :CognitiveEffort (Cognitive effort)

AnnotationAssertion(rdfs:label :CognitiveEffort "Cognitive effort"^^xsd:string)
SubClassOf(:CognitiveEffort :ConflictTrigger)

# Class: :Communication (:Communication)

SubClassOf(:Communication :BehaviouralDomain)

# Class: :ConceptsOfSustainability (Concepts of sustainability)

AnnotationAssertion(rdfs:label :ConceptsOfSustainability "Concepts of sustainability"^^xsd:string)
SubClassOf(:ConceptsOfSustainability :SocialAndPersonalBackground)

# Class: :ConceptualisationOfGovernance (Conceptualisation of governance)

AnnotationAssertion(rdfs:label :ConceptualisationOfGovernance "Conceptualisation of governance"^^xsd:string)
SubClassOf(:ConceptualisationOfGovernance :AspectOfCurrentGovernance)

# Class: :ConflictOrCopingBehaviour (Conflict or coping behaviour)

AnnotationAssertion(rdfs:label :ConflictOrCopingBehaviour "Conflict or coping behaviour"^^xsd:string)
SubClassOf(:ConflictOrCopingBehaviour :BehaviourOrBehaviouralPattern)

# Class: :ConflictTrigger (Conflict trigger)

AnnotationAssertion(rdfs:label :ConflictTrigger "Conflict trigger"^^xsd:string)
SubClassOf(:ConflictTrigger :ConflictOrCopingBehaviour)

# Class: :ConflictingMoralValue (Conflicting moral value)

AnnotationAssertion(rdfs:label :ConflictingMoralValue "Conflicting moral value"^^xsd:string)
SubClassOf(:ConflictingMoralValue :ConflictTrigger)

# Class: :Consumption (:Consumption)

SubClassOf(:Consumption :BehaviouralDomain)

# Class: :Copes (:Copes)

SubClassOf(:Copes :ConflictOrCopingBehaviour)

# Class: :CopingByAction (Copes by action)

AnnotationAssertion(rdfs:label :CopingByAction "Copes by action"^^xsd:string)
SubClassOf(:CopingByAction :Copes)

# Class: :CopingByNoConflict (Copes by no conflict)

AnnotationAssertion(rdfs:label :CopingByNoConflict "Copes by no conflict"^^xsd:string)
SubClassOf(:CopingByNoConflict :Copes)

# Class: :CopingByThinking (Copes by thinking)

AnnotationAssertion(rdfs:label :CopingByThinking "Copes by thinking"^^xsd:string)
SubClassOf(:CopingByThinking :Copes)

# Class: :CreationOfConflictDueToInitiative (Conflict created due to initiative)

AnnotationAssertion(rdfs:label :CreationOfConflictDueToInitiative "Conflict created due to initiative"^^xsd:string)
SubClassOf(:CreationOfConflictDueToInitiative :ImpactOnLifestyleDueToInitiative)

# Class: :CurrentGovernance (Current governance)

AnnotationAssertion(rdfs:label :CurrentGovernance "Current governance"^^xsd:string)
SubClassOf(:CurrentGovernance :AspectOfCurrentGovernance)

# Class: :DisillusionWithGovernace (Disillusion with governance)

AnnotationAssertion(rdfs:label :DisillusionWithGovernace "Disillusion with governance"^^xsd:string)
SubClassOf(:DisillusionWithGovernace :AspectOfCurrentGovernance)

# Class: :Displeasure (:Displeasure)

SubClassOf(:Displeasure :EmotionRelatedToAConflictOrDilemmaOrCoping)

# Class: :Education (:Education)

SubClassOf(:Education :BehaviouralDomain)

# Class: :EducationOrExperience (Education or experience)

AnnotationAssertion(rdfs:label :EducationOrExperience "Education or experience"^^xsd:string)
SubClassOf(:EducationOrExperience :SocialAndPersonalBackground)

# Class: :EffectOnBehaviourDueToInitiative (Behavioural effect due to initiative)

AnnotationAssertion(rdfs:label :EffectOnBehaviourDueToInitiative "Behavioural effect due to initiative"^^xsd:string)
SubClassOf(:EffectOnBehaviourDueToInitiative :ImpactOnLifestyleDueToInitiative)

# Class: :EffectOnCopingWithConflictDueToInitiative (A coping with conflict due to the initiative)

AnnotationAssertion(rdfs:label :EffectOnCopingWithConflictDueToInitiative "A coping with conflict due to the initiative"^^xsd:string)
SubClassOf(:EffectOnCopingWithConflictDueToInitiative :ImpactOnLifestyleDueToInitiative)

# Class: :EffectOnLifestyleDueToInitiative (Lifestyle effect due to initiative)

AnnotationAssertion(rdfs:label :EffectOnLifestyleDueToInitiative "An increase in conflict due to the initiative"^^xsd:string)
AnnotationAssertion(rdfs:label :EffectOnLifestyleDueToInitiative "Lifestyle effect due to initiative"^^xsd:string)
SubClassOf(:EffectOnLifestyleDueToInitiative :ImpactOnLifestyleDueToInitiative)

# Class: :EmotionRelatedToAConflictOrDilemmaOrCoping (Emotion related to either conflict or coping)

AnnotationAssertion(rdfs:label :EmotionRelatedToAConflictOrDilemmaOrCoping "Emotion related to either conflict or coping"^^xsd:string)
SubClassOf(:EmotionRelatedToAConflictOrDilemmaOrCoping :ConflictOrCopingBehaviour)

# Class: :EmotionalImpact (Emotional impact on well-being)

AnnotationAssertion(rdfs:label :EmotionalImpact "Emotional impact on well-being"^^xsd:string)
SubClassOf(:EmotionalImpact :InitiativeRelatedImpactOnWellBeing)

# Class: :Energy (:Energy)

SubClassOf(:Energy :BehaviouralDomain)

# Class: :ExperienceOfPoliticalConditions (Experience of political conditions in the past)

AnnotationAssertion(rdfs:label :ExperienceOfPoliticalConditions "Experience of political conditions in the past"^^xsd:string)
SubClassOf(:ExperienceOfPoliticalConditions :PoliticalEngagement)

# Class: :ExternalHinderingFactor (External hindering factor)

AnnotationAssertion(rdfs:label :ExternalHinderingFactor "External hindering factor"^^xsd:string)
SubClassOf(:ExternalHinderingFactor :HinderingFactor)

# Class: :ExternalSupport (External support)

AnnotationAssertion(rdfs:label :ExternalSupport "External support"^^xsd:string)
SubClassOf(:ExternalSupport :ExternalSupportingFactor)

# Class: :ExternalSupportingFactor (External supporting factor)

AnnotationAssertion(rdfs:label :ExternalSupportingFactor "External supporting factor"^^xsd:string)
SubClassOf(:ExternalSupportingFactor :SupportingFactor)

# Class: :FamilyStatus (Family status)

AnnotationAssertion(rdfs:label :FamilyStatus "Family status"^^xsd:string)
SubClassOf(:FamilyStatus :PersonalAspect)

# Class: :Food (:Food)

SubClassOf(:Food :BehaviouralDomain)

# Class: :FutureOrientation (Future orientation)

AnnotationAssertion(rdfs:label :FutureOrientation "Future orientation"^^xsd:string)
SubClassOf(:FutureOrientation :InternalSupportingFactor)

# Class: :GoodPracticeInInitiative (Good practice in the initiative)

AnnotationAssertion(rdfs:label :GoodPracticeInInitiative "Good practice in the initiative"^^xsd:string)
SubClassOf(:GoodPracticeInInitiative :AspectOfEngagementInInitiative)

# Class: :GovernanceOriginatingFromACommunity (Governance originating from a community)

AnnotationAssertion(rdfs:label :GovernanceOriginatingFromACommunity "Governance originating from a community"^^xsd:string)
SubClassOf(:GovernanceOriginatingFromACommunity :AspectOfFutureOrBetterGovernance)

# Class: :Habit (:Habit)

SubClassOf(:Habit :InternalSupportingFactor)

# Class: :HinderingFactor (Hindering factor)

AnnotationAssertion(rdfs:label :HinderingFactor "Hindering factor"^^xsd:string)
SubClassOf(:HinderingFactor :BehaviourOrBehaviouralPattern)

# Class: :HinderingInfrastructure (Hindering infrastructure)

AnnotationAssertion(rdfs:label :HinderingInfrastructure "Hindering infrastructure"^^xsd:string)
SubClassOf(:HinderingInfrastructure :InternalHinderingFactor)

# Class: :Housing (:Housing)

SubClassOf(:Housing :BehaviouralDomain)

# Class: :Idea (:Idea)

SubClassOf(:Idea :InternalSupportingFactor)

# Class: :ImpactOnLifestyleDueToInitiative (An impact on lifestyle due to initiative)

AnnotationAssertion(rdfs:label :ImpactOnLifestyleDueToInitiative "An impact on lifestyle due to initiative"^^xsd:string)
SubClassOf(:ImpactOnLifestyleDueToInitiative :AspectOfMembershipOfInitiative)

# Class: :IncreaseOfConflictDueToInitiative (Increase in conflict due to the initiative)

AnnotationAssertion(rdfs:label :IncreaseOfConflictDueToInitiative "Increase in conflict due to the initiative"^^xsd:string)
SubClassOf(:IncreaseOfConflictDueToInitiative :ImpactOnLifestyleDueToInitiative)

# Class: :Individual (:Individual)

EquivalentClasses(:Individual :Person)

# Class: :InformationAccessibility (Information accessibility)

AnnotationAssertion(rdfs:label :InformationAccessibility "Information accessibility"^^xsd:string)
SubClassOf(:InformationAccessibility :ExternalSupportingFactor)

# Class: :InformationAvailability (Information availability)

AnnotationAssertion(rdfs:label :InformationAvailability "Information availability"^^xsd:string)
SubClassOf(:InformationAvailability :ExternalSupportingFactor)

# Class: :InitiativeRelatedImpactOnWellBeing (Initiative-related impact on well-being)

AnnotationAssertion(rdfs:label :InitiativeRelatedImpactOnWellBeing "Initiative-related impact on well-being"^^xsd:string)
SubClassOf(:InitiativeRelatedImpactOnWellBeing :WellBeing)

# Class: :InsufficientMoney (Insufficient time)

AnnotationAssertion(rdfs:label :InsufficientMoney "Insufficient time"^^xsd:string)
SubClassOf(:InsufficientMoney :ConflictTrigger)

# Class: :InsufficientTime (Insufficient time)

AnnotationAssertion(rdfs:label :InsufficientTime "Insufficient time"^^xsd:string)
SubClassOf(:InsufficientTime :ConflictTrigger)

# Class: :InternalHinderingFactor (Internal hindering factor)

AnnotationAssertion(rdfs:label :InternalHinderingFactor "Internal hindering factor"^^xsd:string)
SubClassOf(:InternalHinderingFactor :HinderingFactor)

# Class: :InternalSupportingFactor (Internal supporting factor)

AnnotationAssertion(rdfs:label :InternalSupportingFactor "Internal supporting factor"^^xsd:string)
SubClassOf(:InternalSupportingFactor :SupportingFactor)

# Class: :Kid (:Kid)

SubClassOf(:Kid :Person)

# Class: :LackOfKnowledge (Lack of knowledge)

AnnotationAssertion(rdfs:label :LackOfKnowledge "Lack of knowledge"^^xsd:string)
SubClassOf(:LackOfKnowledge :InternalHinderingFactor)

# Class: :LackOfPower (Lack of power)

AnnotationAssertion(rdfs:label :LackOfPower "Lack of power"^^xsd:string)
SubClassOf(:LackOfPower :ConflictTrigger)

# Class: :LackOfSkill (Lack of skill)

AnnotationAssertion(rdfs:label :LackOfSkill "Lack of skill"^^xsd:string)
SubClassOf(:LackOfSkill :InternalHinderingFactor)

# Class: :Laziness (:Laziness)

SubClassOf(:Laziness :ConflictTrigger)

# Class: :LifestyleSatisfactionImpact (Lifestyle satisfaction impact on well-being)

AnnotationAssertion(rdfs:label :LifestyleSatisfactionImpact "Lifestyle satisfaction impact on well-being"^^xsd:string)
SubClassOf(:LifestyleSatisfactionImpact :InitiativeRelatedImpactOnWellBeing)

# Class: :Mobility (:Mobility)

SubClassOf(:Mobility :BehaviouralDomain)

# Class: :MoreEducation (More information)

AnnotationAssertion(rdfs:label :MoreEducation "More information"^^xsd:string)
SubClassOf(:MoreEducation :AspectOfFutureOrBetterGovernance)

# Class: :MoreInformation (More information)

AnnotationAssertion(rdfs:label :MoreInformation "More information"^^xsd:string)
SubClassOf(:MoreInformation :AspectOfFutureOrBetterGovernance)

# Class: :MoreRadicalGovernance (More radical governance)

AnnotationAssertion(rdfs:label :MoreRadicalGovernance "More radical governance"^^xsd:string)
SubClassOf(:MoreRadicalGovernance :AspectOfFutureOrBetterGovernance)

# Class: :Motivation (:Motivation)

SubClassOf(:Motivation :InternalSupportingFactor)

# Class: :MotivationToJoinInitiative (Motivation to join the initiative)

AnnotationAssertion(rdfs:label :MotivationToJoinInitiative "Motivation to join the initiative"^^xsd:string)
SubClassOf(:MotivationToJoinInitiative :BarriersToMembershipOfInitiative)

# Class: :MotivationToStayInvolvedWithIniative (Motivation to stay involved with the initiative)

AnnotationAssertion(rdfs:label :MotivationToStayInvolvedWithIniative "Motivation to stay involved with the initiative"^^xsd:string)
SubClassOf(:MotivationToStayInvolvedWithIniative :BarriersToMembershipOfInitiative)

# Class: :NegativeChangeOnWellBeing (Negative change on well-being)

AnnotationAssertion(rdfs:label :NegativeChangeOnWellBeing "Negative change on well-being"^^xsd:string)
SubClassOf(:NegativeChangeOnWellBeing :WellBeing)

# Class: :NoSupport (No support)

AnnotationAssertion(rdfs:label :NoSupport "No support"^^xsd:string)
SubClassOf(:NoSupport :ExternalHinderingFactor)

# Class: :ObstacleToJoiningTheInitiative (Obstacle to joining the initiative)

AnnotationAssertion(rdfs:label :ObstacleToJoiningTheInitiative "Obstacle to joining the initiative"^^xsd:string)
SubClassOf(:ObstacleToJoiningTheInitiative :BarriersToMembershipOfInitiative)

# Class: :ObstacleToRemainingWithInitiative (Obstacle to reamaining with the initiative)

AnnotationAssertion(rdfs:label :ObstacleToRemainingWithInitiative "Obstacle to reamaining with the initiative"^^xsd:string)
SubClassOf(:ObstacleToRemainingWithInitiative :BarriersToMembershipOfInitiative)

# Class: :Occupation (:Occupation)

SubClassOf(:Occupation :PersonalAspect)

# Class: :OriginatingFromAnIndividual (:OriginatingFromAnIndividual)

SubClassOf(:OriginatingFromAnIndividual :AspectOfFutureOrBetterGovernance)

# Class: :OverlyComplex (Overly complex)

AnnotationAssertion(rdfs:label :OverlyComplex "Overly complex"^^xsd:string)
SubClassOf(:OverlyComplex :ExternalHinderingFactor)

# Class: :PeriodOfTime (:PeriodOfTime)

SubClassOf(:PeriodOfTime :Measurement)

# Class: :PersonalAspect (Personal Aspect)

AnnotationAssertion(rdfs:label :PersonalAspect "Personal Aspect"^^xsd:string)
SubClassOf(:PersonalAspect :SocialAndPersonalBackground)

# Class: :PersonalDevelopmentalImpact (Personal development impact on well-being)

AnnotationAssertion(rdfs:label :PersonalDevelopmentalImpact "Personal development impact on well-being"^^xsd:string)
SubClassOf(:PersonalDevelopmentalImpact :InitiativeRelatedImpactOnWellBeing)

# Class: :Pleasure (:Pleasure)

SubClassOf(:Pleasure :EmotionRelatedToAConflictOrDilemmaOrCoping)

# Class: :PoliticalActitivity (Politcal Activity)

AnnotationAssertion(rdfs:label :PoliticalActitivity "Politcal Activity"^^xsd:string)
SubClassOf(:PoliticalActitivity :BehaviouralDomain)

# Class: :PoliticalEngagement (Political engagement)

AnnotationAssertion(rdfs:label :PoliticalEngagement "Political engagement"^^xsd:string)
SubClassOf(:PoliticalEngagement :SocialAndPersonalBackground)

# Class: :PositiveChangeOnWellBeing (Positive change on well-being)

AnnotationAssertion(rdfs:label :PositiveChangeOnWellBeing "Positive change on well-being"^^xsd:string)
SubClassOf(:PositiveChangeOnWellBeing :WellBeing)

# Class: :PreviousPoliticalEngagement (Previous political engagement)

AnnotationAssertion(rdfs:label :PreviousPoliticalEngagement "Previous political engagement"^^xsd:string)
SubClassOf(:PreviousPoliticalEngagement :PoliticalEngagement)

# Class: :Pride (:Pride)

SubClassOf(:Pride :EmotionRelatedToAConflictOrDilemmaOrCoping)

# Class: :ProfessionalKnowledge (Professional knowledge)

AnnotationAssertion(rdfs:label :ProfessionalKnowledge "Professional knowledge"^^xsd:string)
SubClassOf(:ProfessionalKnowledge :InternalSupportingFactor)

# Class: :ReferenceToPoliticalBiography (Reference to a political biography)

AnnotationAssertion(rdfs:label :ReferenceToPoliticalBiography "Reference to a political biography"^^xsd:string)
SubClassOf(:ReferenceToPoliticalBiography :PoliticalEngagement)

# Class: :RelevantEducation (Relevant education)

AnnotationAssertion(rdfs:label :RelevantEducation "Relevant education"^^xsd:string)
SubClassOf(:RelevantEducation :EducationOrExperience)

# Class: :RelevantExperience (Relevant experience)

AnnotationAssertion(rdfs:label :RelevantExperience "Relevant experience"^^xsd:string)
SubClassOf(:RelevantExperience :EducationOrExperience)

# Class: :RelevantTraning (Relevant training)

AnnotationAssertion(rdfs:label :RelevantTraning "Relevant training"^^xsd:string)
SubClassOf(:RelevantTraning :EducationOrExperience)

# Class: :ResdienceInRelationToWorkPlace (Relation of residence to work place)

AnnotationAssertion(rdfs:label :ResdienceInRelationToWorkPlace "Relation of residence to work place"^^xsd:string)
SubClassOf(:ResdienceInRelationToWorkPlace :PersonalAspect)

# Class: :RoleIninitiative (Role in the initiative)

AnnotationAssertion(rdfs:label :RoleIninitiative "Role in the initiative"^^xsd:string)
SubClassOf(:RoleIninitiative :AspectOfEngagementInInitiative)

# Class: :SocialAndPersonalBackground (Social and personal background)

AnnotationAssertion(rdfs:label :SocialAndPersonalBackground "Social and personal background"^^xsd:string)

# Class: :SocialImpact (Social impact on well-being)

AnnotationAssertion(rdfs:label :SocialImpact "Social impact on well-being"^^xsd:string)
SubClassOf(:SocialImpact :InitiativeRelatedImpactOnWellBeing)

# Class: :SocialPeerPressure (Social peer pressure)

AnnotationAssertion(rdfs:label :SocialPeerPressure "Social peer pressure"^^xsd:string)
SubClassOf(:SocialPeerPressure :ConflictTrigger)

# Class: :SupportingFactor (Supporting factor)

AnnotationAssertion(rdfs:label :SupportingFactor "Supporting factor"^^xsd:string)
SubClassOf(:SupportingFactor :BehaviourOrBehaviouralPattern)

# Class: :SupportingInfrastructure (Supporting infrastructure)

AnnotationAssertion(rdfs:label :SupportingInfrastructure "Supporting infrastructure"^^xsd:string)
SubClassOf(:SupportingInfrastructure :ExternalSupportingFactor)

# Class: :SustainableBehaviour (Sustainable behaviour)

AnnotationAssertion(rdfs:label :SustainableBehaviour "Sustainable behaviour"^^xsd:string)
SubClassOf(:SustainableBehaviour :BehaviourOrBehaviouralPattern)

# Class: :TimeManagementIssue (Time management issue)

AnnotationAssertion(rdfs:label :TimeManagementIssue "Time management issue"^^xsd:string)
SubClassOf(:TimeManagementIssue :TimeRelatedBehaviour)

# Class: :TimeRelatedBehaviour (Time related behaviour)

AnnotationAssertion(rdfs:label :TimeRelatedBehaviour "Time related behaviour"^^xsd:string)
SubClassOf(:TimeRelatedBehaviour :BehaviourOrBehaviouralPattern)

# Class: :TimeScarcity (Time scarcity)

AnnotationAssertion(rdfs:label :TimeScarcity "Time scarcity"^^xsd:string)
SubClassOf(:TimeScarcity :TimeRelatedBehaviour)

# Class: :TimeStress (Time stress)

AnnotationAssertion(rdfs:label :TimeStress "Time stress"^^xsd:string)
SubClassOf(:TimeStress :TimeRelatedBehaviour)

# Class: :TimeUsedForTheinitiative (Time used for the initiative)

AnnotationAssertion(rdfs:label :TimeUsedForTheinitiative "Time used for the initiative"^^xsd:string)
SubClassOf(:TimeUsedForTheinitiative :AspectOfEngagementInInitiative)

# Class: :UnavailableLand (Unavailable land)

AnnotationAssertion(rdfs:label :UnavailableLand "Unavailable land"^^xsd:string)
SubClassOf(:UnavailableLand :ExternalHinderingFactor)

# Class: :UnitOfTime (:UnitOfTime)

SubClassOf(:UnitOfTime :PeriodOfTime)

# Class: :Value (:Value)

SubClassOf(:Value :InternalSupportingFactor)

# Class: :WellBeing (Well-being)

AnnotationAssertion(rdfs:label :WellBeing "Well-being"^^xsd:string)


############################
#   Named Individuals
############################

# Individual: :author:DougSalt (Doug Salt)

AnnotationAssertion(rdfs:label :author:DougSalt "Doug Salt")


)